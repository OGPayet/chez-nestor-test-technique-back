version: "3"

services:
  front-end:
    build: ./front-end
    volumes:
      - ./front-end:/app
      - front_end_node_modules:/app/node_modules
      - front_end_dotnuxt:/app/.nuxt
    command: [pnpm, dev, -o]
    ports:
      - "3000:3000"
    networks:
      - postgres
    restart: unless-stopped
    depends_on:
      - postgres

  back-end:
    build: ./back-end
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - SECRETKEY=${SECRETKEY}
      - EXPIRESIN=${EXPIRESIN}
    volumes:
      - ./back-end:/app
      - back_end_node_modules:/app/node_modules
    command: [pnpm, run, start:migrate:seed:dev]
    ports:
      - "4000:4000"
    networks:
      - postgres
    restart: unless-stopped
    depends_on:
      - postgres

  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_DB: ${POSTGRES_DATABASE:-postgres_db}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres
    restart: unless-stopped
    depends_on:
      - postgres

networks:
  postgres:
    driver: bridge

volumes:
  front_end_node_modules:
  front_end_dotnuxt:
  back_end_node_modules:
  postgres:
  pgadmin:
